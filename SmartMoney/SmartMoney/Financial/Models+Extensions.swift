import Foundation

extension RecommendationRequest.Transaction {
    static func convert(from model: TransactionModel) -> Self {
        .init(
            amount: model.amount,
            title: model.title,
            annotation: model.annotation,
            dateAndTime: model.dateAndTime,
            isExpense: model.isExpense,
            cardId: model.cardId
        )
    }
}

extension RecommendationRequest.FinancialGoal {
    static func convert(from model: FinancialGoalModel) -> Self {
        .init(
            amount: model.amount,
            currentAmount: model.currentAmount,
            title: model.title,
            annotation: model.annotation,
            endDate: model.endDate
        )
    }
}

extension RecommendationRequest.Credit {
    static func convert(from model: CreditModel) -> Self {
        .init(
            amount: model.amount,
            currentAmount: model.currentAmount,
            bankInstitution: model.bankInstitution,
            title: model.title,
            annotation: model.annotation,
            startDate: model.startDate,
            endDate: model.endDate,
            interestRate: model.interestRate,
            payments: model.payments.map { RecommendationRequest.Payment(status: "", amount: $0, date: nil) }
        )
    }
}

extension Prediction {
    func convertToMessage() -> MessageModel {
        let formattedIncome = String(format: "%.2f", incomeNextMonth)
        let formattedExpenses = String(format: "%.2f", expensesNextMonth)
        let difference = incomeNextMonth - expensesNextMonth
        let formattedDifference = String(format: "%.2f", difference)
        
        var message = "–ü—Ä–æ–≥–Ω–æ–∑ –Ω–Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü:\n\n"
        message += "‚Ä¢ –î–æ—Ö–æ–¥—ã: $\(formattedIncome)\n"
        message += "‚Ä¢ –†–∞—Å—Ö–æ–¥—ã: $\(formattedExpenses)\n\n"
        
        if difference > 0 {
            message += "–¢—ã –º–æ–∂–µ—à—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å $\(formattedDifference) –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ! üëç"
        } else if difference < 0 {
            message += "–ö–∞–∂–µ—Ç—Å—è —Ç–≤–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã –ø—Ä–µ–≤—ã—Å—è—Ç –¥–æ—Ö–æ–¥—ã –Ω–∞ $\(abs(difference)) –≤ —Å–ª–µ–¥—É—é—â–µ–º –º–µ—Å—è—Ü–µ. –ú–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–∞—Ä –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤. ‚ö†Ô∏è"
        } else {
            message += "–î–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã —Ä–∞–≤–Ω—ã"
        }
        
        
        return MessageModel(text: message, sender: .ai)
    }
}
